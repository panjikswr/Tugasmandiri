#include <iostream>
#include <vector>
#include <conio.h>
using namespace std;

class ArrayTerurut
{
	private:
		vector <double> v; //vector v
		int jumElemen; //jumlah item data
		
		public:
		ArrayTerurut(int max)
		{
			v.resize(max)//ukuran array;
			jumlahElemen = 0;
		}
		
		int bacaUkuran()
		{return jumElemen;}
		int cari (double kunciPencarian)
		{
			return cariRekursif(kunciPencarian,0,jumElemen-1);
		}
		int cariRekursif(double kunciPencarian,int batasBawah, int batasAtas)
		{
			int posSkrg;
			posSkrg=(batasBawah + BatasAtas)/2;
			
			if(v[posSkrg]==kunciPencarian)
			return posSkrg;//ditentukan
			else //membagi rentang
		{if(v[posSkrg]<kunciPencarian)
		return cariRekursi(kunciPencarian,posSkrg+1,batasAtas);
		else
		return CariRekursif(Pencarian,batasBawah,posSkrg-1);
		}
		}
		
		void sisip(double nilai)
		{
			int j;
			for(j=0;j<jumlahElemen:j++)
			if(v[j]>nilai)
			break;
			
			for(int k=jumElemen;k>j;k--)
			v[k]= v[k-1];
			v[j]=nilai;
			jumlahElemen++;
			
		}//akhirsisip(
		
		void tampil()
		{
			for(int j=0; j=<jumElemen;j++)
			cout << v[j]<<"";
			cout<<end;
		}//akhir kelas ArrayTerurut
		
		int main()
		{
			int ukuranMaks = 100;// ukuran array
			ArrayTerurut arr(ukuranMaks);//array terurut
			arr.sisip(72);//menyisipkan item-item
			arr.sisip(90);
			arr.sisip(45);
			arr.sisip(126);
			arr.sisip(54);
			arr.sisip(99);
			arr.sisip(144);
			arr.sisip(27);
			arr.sisip(135);
			arr.sisip(81);
			arr.sisip(18);
			arr.sisip(108);
			arr.sisip(9);
			arr.sisip(117);
			arr.sisip(63);
			arr.sisip(36);
			arr.tampil();
			int kunciPencarian = 117;
			if(arr.cari(kunciPencarian)!= arr.bacaUkuran())
			cout<<"menemukan"<<kunciPencarian<<endl;
			else 
			cout<<"Tidak ditemukan"<<kunciPencarian<< endl;
			getch();
			return 0;
		}//akhirmain
	
	
	
	
}
